name: CSV Linter and Trailing Whitespaces

on:
  push:
  pull_request:

jobs:
  lint_and_check_trailing_whitespaces:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install csvkit

      - name: Validate CSV structure
        run: |
          echo "Checking CSV structure..."
          if ! csvclean --dry-run prompts.csv > /tmp/csv_errors.log 2>&1; then
            echo "::error::CSV validation failed"
            cat /tmp/csv_errors.log
            exit 1
          fi

      - name: Check CSV format
        run: |
          echo "Checking CSV format..."
          python - <<EOF
          import csv, sys
          with open("prompts.csv", "r", encoding="utf-8") as f:
              reader = csv.DictReader(f)
              expected_headers = ["act", "prompt"]
              if reader.fieldnames != expected_headers:
                  print(f"::error::CSV headers must be {expected_headers}, but got {reader.fieldnames}")
                  sys.exit(1)
              for row_num, row in enumerate(reader, start=2):
                  if not row["act"] or not row["prompt"]:
                      print(f"::error::Row {row_num} has empty values: {row}")
                      sys.exit(1)
          EOF

      - name: Check Trailing Whitespaces
        run: |
          echo "Checking for trailing whitespaces..."
          if grep -E "[[:space:]]+$" prompts.csv; then
            echo "::error::Found trailing whitespaces in prompts.csv"
            exit 1
          fi
          echo "✅ No trailing whitespaces found."

      - name: Check for UTF-8 BOM and line endings
        run: |
          echo "Checking for UTF-8 BOM..."
          if head -c3 prompts.csv | grep -q $'\xEF\xBB\xBF'; then
            echo "::error::File has UTF-8 BOM. Please remove it."
            exit 1
          fi
          echo "✅ No UTF-8 BOM found."

          echo "Checking for correct line endings..."
          if file prompts.csv | grep -q "CRLF"; then
            echo "::error::File has Windows-style CRLF line endings. Please convert to LF."
            exit 1
          fi
          echo "✅ Line endings are correct."
